KOKKOS_INTERNAL_USE_HDF5 := $(call kokkos_has_string,$(KOKKOS_OPTIONS),enable_hdf5)
KOKKOS_INTERNAL_USE_HDF5_PARALLEL := $(call kokkos_has_string,$(KOKKOS_OPTIONS),enable_hdf5_parallel)
KOKKOS_INTERNAL_USE_CHECKPOINT := $(call kokkos_has_string,$(KOKKOS_OPTIONS),enable_checkpoint)

KOKKOS_CXXFLAGS += -I$(KOKKOS_RESILIENCE_PATH)/src/resilience
ifeq ($(KOKKOS_INTERNAL_USE_HDF5), 1)
  KOKKOS_LIBS += -lhdf5
endif
ifeq ($(KOKKOS_INTERNAL_USE_CHECKPOINT), 1)
  tmp := $(call kokkos_append_header,"\#define KOKKOS_USE_CHECKPOINT")
endif
ifeq ($(KOKKOS_INTERNAL_USE_HDF5), 1)
  tmp := $(call kokkos_append_header,"\#define KOKKOS_ENABLE_HDF5")
endif
ifeq ($(KOKKOS_INTERNAL_USE_HDF5_PARALLEL), 1)
  tmp := $(call kokkos_append_header,"\#define KOKKOS_ENABLE_HDF5_PARALLEL")
endif
ifneq ("$(wildcard KokkosCore_config.tmp)","")
   tmp := $(shell cp KokkosCore_config.tmp KokkosCore_config.h)
endif

KOKKOS_HEADERS += $(wildcard $(KOKKOS_RESILIENCE_PATH)/src/resilience/*.hpp)
KOKKOS_HEADERS += $(wildcard $(KOKKOS_RESILIENCE_PATH)/src/resilience/impl/*.hpp)

KOKKOS_SRC += $(wildcard $(KOKKOS_RESILIENCE_PATH)/src/resilience/*.cpp)
KOKKOS_SRC += $(wildcard $(KOKKOS_RESILIENCE_PATH)/src/resilience/impl/*.cpp)

ifeq ($(KOKKOS_INTERNAL_USE_CUDA), 1)
  KOKKOS_SRC += $(wildcard $(KOKKOS_RESILIENCE_PATH)/src/resilience/Cuda/*.cpp)
endif

ifneq ($(KOKKOS_INTERNAL_USE_HDF5), 1)
  KOKKOS_SRC := $(filter-out $(KOKKOS_RESILIENCE_PATH)/src/resilience/impl/Kokkos_HDF5Space.cpp,$(KOKKOS_SRC))
endif
KOKKOS_SRC := $(filter-out $(KOKKOS_RESILIENCE_PATH)/src/resilience/resilience.cpp,$(KOKKOS_SRC))

KOKKOS_OBJ = $(KOKKOS_SRC:.cpp=.o)
KOKKOS_OBJ_LINK = $(notdir $(KOKKOS_OBJ))

include $(KOKKOS_RESILIENCE_PATH)/Makefile.targets

libkokkos.a: $(KOKKOS_OBJ_LINK) $(KOKKOS_SRC) $(KOKKOS_HEADERS)
	ar cr libkokkos.a $(KOKKOS_OBJ_LINK)
	ranlib libkokkos.a
